package cn.e3mall.item.listener;

import java.util.HashMap;
import java.util.Map;

import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer;

import cn.e3mall.item.pojo.Item;
import cn.e3mall.pojo.TbItem;
import cn.e3mall.pojo.TbItemDesc;
import cn.e3mall.service.ItemService;

/**
 * 监听商品添加的消息中的id，生成静态页面
 * <p>
 * Title: HtmlGenListener
 * </p>
 * <p>
 * Description:
 * </p>
 */
public class HtmlGenListener implements MessageListener {

	@Autowired
	private ItemService itemService;
	
	@Autowired
	private FreeMarkerConfigurer freeMarkerConfigurer;
	
	@Override
	public void onMessage(Message message) {
		try {
			// 创建一个模板，参考jsp即可
			// 从商品中取商品id
			TextMessage textMessage = (TextMessage) message;
			String text = textMessage.getText();
			Long itemId = new Long(text);
			// 根据id查商品信息：商品基本信息，商品描述
			TbItem tbItem = itemService.getItemById(itemId);
			Item item = new Item(tbItem);
			TbItemDesc itemDesc = itemService.geTbItemDescById(itemId);
			// 创建一个数据集，推荐使用map,把商品数据封装
			Map data = new HashMap<>();
			data.put("item", item);
			data.put("itemDesc",itemDesc);
			// 加载模板对象
			
			// 创建一个输出流，指定输出目录及文件名
			// 生成静态页面
			// 关闭流
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
